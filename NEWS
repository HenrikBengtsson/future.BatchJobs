Package: async
==============

Version: 0.4.0 [2015-06-08]
o CLEANUP: Extract Future API and moved to new package 'future'.
o Now delayedAsyncAssign() returns a Future.
o BUG FIX: The existance of .BatchJobs.R would override
  whatever backend was already set by backend().
o BUG FIX: Asynchroneous evaluation of { a <<- 1 } no longer
  identifies 'a' as a global variable that needs to be exported.


Version: 0.3.1 [2015-05-23]
o CLEANUP: Moved more internal code to the 'listenv' package.


Version: 0.3.0 [2015-05-21]
o Now inspect(envir=x) returns all tasks if only the environment
  is specified, e.g. inspect(envir=x) vs inspect(x$a).
o Added completed() and failed(), expired().
o Any flavor of backend("multicore") is based on availableCores().
o Added availableCores() for identifying the number of available cores.
  The default is to acknowledged the assigned number of cores by
  queing systems such as Torque/PBS, before using detectCores() of
  the 'parallel' package.
o CLEANUP: Moved identification of globals to new 'globals' package.
o CLEANUP: Moved list environments to new 'listenv' package.
o ROBUSTNESS: Asynchroneous tasks that still run when R exists
  will not be stopped and not deleted.  This will allow the tasks
  running on job clusters to complete.
o BUG FIX: AsyncTask objects were not assigned to the listenv.


Version: 0.2.0 [2015-05-11]
o Functions AsyncTask() and delayedAsyncAssign() gained argument
  'substitute' for controlling whether the expression/value
  should  be substitute():d or not.
o ROBUSTNESS: Added package tests for delayedAsyncAssign().
o ROBUSTNESS: Package test coverage is 77%.
o CLEANUP: Internal restructuring with more informative classes.


Version: 0.1.4 [2015-05-02]
o Added print() for listenv:s.
o CLEANUP: Using tempvar() of R.utils.


Version: 0.1.3 [2015-04-26]
o Added AsyncListEnv.
o ROBUSTNESS: Add protection for trying to evaluating asynchroneous
  expressions with global objects that are "too large" and therefore
  introduces lots of overhead in exporting to, and importing from
  workers.  The size limit of the maximum allowed total export size
  is controlled by option 'async::maxSizeOfGlobals'.


Version: 0.1.2 [2015-04-21]
o Now status(), finished() etc. for AsyncTask returns NA in case
  task backend registry is deleted.  print() does a better job
  too in this case.
o Now inspect() also accepts complex input such as inspect(a$x),
  inspect(a[["x"]]) and inspect(a[[1]]).  It also accepts a
  character name such as inspect("x", envir=a).
o Now await() for AsyncTask gives an more informative error message
  in case the backend registry was preemptively deleted.
o Added error classes AsyncError and AsyncTaskError with more
  informative error messages simplifying troubleshooting.
o CLEANUP: Now async BatchJobs registries are created in ./.async/
o BUG FIX: Delayed (synchroneous and asynchroneous) assignments to
  listenv:s did not update the internal name-to-variable map, which
  effectively made such listenv:s object empty (although the assign
  value was stored internally).


Version: 0.1.1 [2015-04-07]
o BUG FIX: asyncBatchEvalQ() would given "Error in packageVersion(pkg) :
  package 'R_GlobalEnv'" if the expression had a global function defined
  in the global environment.  Now asyncBatchEvalQ() does a better jobs
  in identifying package names.  Added package tests for this case.


Version: 0.1.0 [2015-02-07]
o First prototype of an old idea of asynchronous evaluations with
  delayed assignments.
o Created.
