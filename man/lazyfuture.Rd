% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/LazyFuture.R
\name{lazyfuture}
\alias{lazyfuture}
\title{A lazy future represents a future whose value will be resolved at the time when it is requested}
\usage{
lazyfuture(expr, envir = parent.frame(), substitute = TRUE, local = TRUE,
  ...)
}
\arguments{
\item{expr}{An R \link[base]{expression}.}

\item{envir}{The \link{environment} in which the evaluation
is done (or inherits from if \code{local} is TRUE).}

\item{substitute}{If TRUE, argument \code{expr} is
\code{\link[base]{substitute}()}:ed, otherwise not.}

\item{local}{If TRUE, the expression is evaluated such that
all assignments are done to local temporary environment, otherwise
the assignments are done in the calling environment.}

\item{...}{Not used.}
}
\value{
A \link{LazyFuture}.
}
\description{
A lazy future is a future that uses lazy evaluation, which means
that its value is only computed and resolved at the time when the
value is requested.  This means that the future will not be resolved
if the value is never requested.
}
\details{
This function can be registered as the default \link{future} evaluator,
i.e. \code{options(future=lazyfuture)}.
}
\examples{
f <- future({
  a <- 7
  b <- 3
  c <- 2
  a * b * c
})

print(isResolved(f))
y <- value(f)
print(y)
}
\seealso{
Internally, \code{\link[base]{delayedAssign}()} is utilized to
create a "\emph{\link[base]{promise}}", which hold the future's value.
}

