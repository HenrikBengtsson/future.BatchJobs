% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batchjobs_local.R
\name{batchjobs_local}
\alias{batchjobs_interactive}
\alias{batchjobs_local}
\title{BatchJobs local and interactive futures}
\usage{
batchjobs_local(expr, envir = parent.frame(), substitute = TRUE, ...)
}
\arguments{
\item{expr}{An R expression to be evaluated.}

\item{envir}{The environment from which global environment
are search from.}

\item{substitute}{Controls whether \code{expr} should be
\code{substitute()}:d or not.}

\item{\ldots}{Additional arguments passed to \code{\link{BatchJobsFuture}()}.}
}
\value{
An object of class \code{BatchJobsFuture}.
}
\description{
A \emph{local} and an \emph{interactive} BatchJobs future is synchronous
and uni-process, will be evaluated immediately, and will block until the
future is resolved.
The difference between a local and an interactive BatchJobs is that
the former will be evaluated in a separate background R session whereas
the latter will be evaluated in the current R session.  Furthermore,
the interactive one will not be evaluated in a local environment and
therefore any assignments will be made to calling environment
}
\seealso{
An alternative to BatchJobs local futures is to use
\link[future:cluster]{cluster} futures of the \pkg{future}
with a single local background session, i.e.
\code{plan(cluster, workers="localhost")}.

An alternative to BatchJobs interactive futures is to use
\link[future:transparent]{transparent} futures of the \pkg{future}.

Internally \code{\link[BatchJobs]{makeClusterFunctionsLocal}()} and
\code{\link[BatchJobs]{makeClusterFunctionsInteractive}()} are used
to create the BatchJobs cluster-function backends.
}

