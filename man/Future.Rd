% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/Future.R
\name{future}
\alias{future}
\title{Asynchroneously evaluates an expression whose value should be available at some point in the future}
\usage{
future(expr, envir = parent.frame(), substitute = TRUE, ...,
  evaluator = getOption("future", lazy))
}
\arguments{
\item{expr}{An R \link[base]{expression}.}

\item{envir}{The \link{environment} from where global
objects should be identified.  Depending on "evaluator",
it may also be the environment in which the expression
is evaluated.}

\item{substitute}{If TRUE, argument \code{expr} is
\code{\link[base]{substitute}()}:ed, otherwise not.}

\item{...}{Additional arguments passed to the "evaluator".}

\item{evaluator}{The actual function that evaluates
\code{expr} and returns a future.  The evaluator function
should accept all the same arguments as this function
(except \code{evaluator}).}
}
\value{
A \link{Future}.
}
\description{
Asynchroneously evaluates an R expression and returns a future,
which the can be inspected for being resolved or not and when
resolved can have its value retrieved.
}
\examples{
f <- future({
  a <- 7
  b <- 3
  c <- 2
  a * b * c
})

print(isResolved(f))
y <- value(f)
print(y)
}
\seealso{
It is recommended that the evaluator is \emph{non-blocking}
(returns immediately), but it is not required.
The default evaluator function is \code{\link{lazy}()},
but can be changed via option \code{"future"}.
}

