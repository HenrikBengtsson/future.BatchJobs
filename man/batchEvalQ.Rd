% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/batchEvalQ.R
\name{batchEvalQ}
\alias{batchEvalQ}
\title{Evaluates expressions as jobs on a registry}
\usage{
batchEvalQ(reg, exprs, local = FALSE, ...)
}
\arguments{
\item{reg}{[\code{\link{Registry}}]\cr
Empty Registry that will store jobs for the mapping.}

\item{exprs}{[\code{\link{list}}]\cr
A list of \code{\link{expression}}:s to evaluate.}

\item{local}{[\code{\link{logical}}[1]]\cr
If TRUE, the expression is evaluated wrapped in a
\code{\link[base]{local}} call, otherwise directly
in the global environment (of the job).}

\item{...}{[any]\cr
  Additional arguments passed to \code{\link{batchMap}}.}
}
\value{
Vector of type \code{integer} with job ids.
}
\description{
Evaluates expressions as jobs on a registry
}
\examples{
reg = makeRegistry(id = "BatchJobsExample", file.dir = tempfile(), seed = 123)
exprs <- list(
  A = substitute({
    rnorm(10)
  }),
  B = substitute({
    rnorm(20)
  })
)
batchEvalQ(reg, exprs)
print(reg)
}
\seealso{
This function work analogously to
\code{parallel::\link[parallel]{clusterEvalQ}} but
accepts multiple expressions instead of just one.
}

