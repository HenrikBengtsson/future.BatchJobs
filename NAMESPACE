# Generated by roxygen2: do not edit by hand

S3method(await,BatchJobsFuture)
S3method(delete,BatchJobsFuture)
S3method(finished,BatchJobsFuture)
S3method(loggedError,BatchJobsFuture)
S3method(loggedOutput,BatchJobsFuture)
S3method(nbrOfWorkers,batchjobs)
S3method(nbrOfWorkers,batchjobs_multicore)
S3method(print,BatchJobsFuture)
S3method(resolved,BatchJobsFuture)
S3method(result,BatchJobsFuture)
S3method(run,BatchJobsFuture)
S3method(status,BatchJobsFuture)
export("%resources%")
export(BatchJobsFuture)
export(BatchJobsFutureError)
export(batchjobs_custom)
export(batchjobs_interactive)
export(batchjobs_local)
export(batchjobs_lsf)
export(batchjobs_multicore)
export(batchjobs_openlava)
export(batchjobs_sge)
export(batchjobs_slurm)
export(batchjobs_torque)
export(finished)
export(loggedError)
export(loggedOutput)
export(status)
importFrom(BatchJobs,addRegistryPackages)
importFrom(BatchJobs,batchExport)
importFrom(BatchJobs,batchMap)
importFrom(BatchJobs,getErrorMessages)
importFrom(BatchJobs,getLogFiles)
importFrom(BatchJobs,getStatus)
importFrom(BatchJobs,loadResult)
importFrom(BatchJobs,makeClusterFunctionsInteractive)
importFrom(BatchJobs,makeClusterFunctionsLSF)
importFrom(BatchJobs,makeClusterFunctionsLocal)
importFrom(BatchJobs,makeClusterFunctionsMulticore)
importFrom(BatchJobs,makeClusterFunctionsSGE)
importFrom(BatchJobs,makeClusterFunctionsSLURM)
importFrom(BatchJobs,makeClusterFunctionsTorque)
importFrom(BatchJobs,makeRegistry)
importFrom(BatchJobs,removeRegistry)
importFrom(BatchJobs,submitJobs)
importFrom(R.utils,isFile)
importFrom(R.utils,removeDirectory)
importFrom(R.utils,tempvar)
importFrom(future,Future)
importFrom(future,FutureError)
importFrom(future,availableCores)
importFrom(future,getExpression)
importFrom(future,getGlobalsAndPackages)
importFrom(future,nbrOfWorkers)
importFrom(future,plan)
importFrom(future,resolved)
importFrom(future,result)
importFrom(future,run)
importFrom(future,tweak)
importFrom(utils,capture.output)
importFrom(utils,file_test)
importFrom(utils,sessionInfo)
importFrom(utils,str)
importFrom(utils,tail)
